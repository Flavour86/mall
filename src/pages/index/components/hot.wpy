<style lang="less" src="./hot.less" />

<template>
  <panel :className="className">
    <view wx:if="{{!!title.length}}" slot="title" class="h2-tit">{{title}}</view>
    <view wx:if="{{!!hotCategory.length}}" class="cate-list clearfix">
      <repeat for="{{hotCategory}}" index="index" item="item" key="index">
        <view class="{{isHidden ? 'item-style1 bigSize' : 'item-style1'}}" @tap="tap('{{item}}')">
          <imageX :dSrc="item.icon" mode="aspectFill" />
          <text wx:if="{{!isHidden}}">{{item.name}}</text>
        </view>
      </repeat>
      <slot></slot>
    </view>
  </panel>
</template>

<script>
  import wepy from 'wepy'
  import Panel from '@/components/common/panel'
  import { connect } from 'wepy-redux'
  import * as $C from '../constants'
  import ImageX from '@/components/share/image'

  @connect({
    categorys: state => state.categorys
  })
  export default class Hot extends wepy.component {
    components = {
      panel: Panel,
      imageX: ImageX
    }

    data = {
      hotTitle: ''
    }
    props = {
      className: {
        type: [String]
      },
      filterKey: {
        type: [String]
      },
      value: {
        type: [String, Number]
      },
      styleType: {
        type: [Number]
      },
      title: {
        type: [String]
      },
      showListNum: {
        type: [Number]
      }
    }
    computed = {
      hotCategory () {
        let categorys = this.computed.categorys()
        if (this.filterKey && this.value) {
          categorys = categorys.filter(item => item[this.filterKey] === +this.value)
        }
        return this.showListNum ? categorys.slice(0, this.showListNum) : categorys
      },
      isHidden () {
        return this.styleType === $C.PANELTYPE.NOTEXT
      }
    }

    methods = {
      tap (data) {
        this.$root.redirectUrl(data, 'list')
      }
    }
  }
</script>
